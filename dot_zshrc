# ~/.zshrc: executed by zsh(1) for interactive shells.

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# History settings
HISTSIZE=10000
SAVEHIST=100000
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt APPEND_HISTORY
setopt SHARE_HISTORY

# Check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
autoload -U add-zsh-hook
# add-zsh-hook precmd resize_terminal

# Make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Set prompt
autoload -Uz colors && colors
autoload -Uz vcs_info
precmd() { vcs_info }
zstyle ':vcs_info:git:*' formats '%F{magenta}(%b)%f'
setopt PROMPT_SUBST
PROMPT='%F{cyan}%D{%Y/%m/%d_%H:%M:%S}%f %F{yellow}%m:%~%f
%F{green}%n@%1~%f${vcs_info_msg_0_}%# '

# Enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Some more ls aliases
# eza
if [ -x "$(command -v eza)" ]; then
    alias ll='eza -al'
else
    alias ll='ls -alFh'
fi
alias la='ls -A'
alias l='ls -CF'

# Git aliases
alias g='git'
alias ga='git add'
alias gd='git diff'
alias gs='git status'
alias gco='git checkout'
alias gc='git commit'

# Docker aliases
alias dps='docker ps'
alias dpsa='docker ps -a'
alias dim='docker images'
alias dc='docker-compose'
alias k='kubectl'

# AWS alias
alias lls='aws s3 ls '

# Use bat instead of cat if available
if [ -x "$(command -v bat)" ]; then
    alias cat='bat'
fi

# Load aliases from separate file if it exists
[ -f ~/.zsh_aliases ] && source ~/.zsh_aliases

# Load Git completion
autoload -Uz compinit && compinit

# Load fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# fd - cd to selected directory
fd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

# fda - including hidden directories
fda() {
  local dir
  dir=$(find ${1:-.} -type d 2> /dev/null | fzf +m) && cd "$dir"
}

# fh - repeat history
fh() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed -E 's/ *[0-9]*\*? *//' | sed -E 's/\\/\\\\/g')
}

# fbr - checkout git branch
fbr() {
  local branches branch
  branches=$(git --no-pager branch -vv) &&
  branch=$(echo "$branches" | fzf +m) &&
  git checkout $(echo "$branch" | awk '{print $1}' | sed "s/.* //")
}

fhq() {
  local dir
  dir=$(ghq list --full-path | fzf)
  echo "$dir"
  cd "$dir"
}

# iTerm2 tab color functions
tabc() {
  NAME=$1; if [ -z "$NAME" ]; then NAME="Default"; fi
  echo -e "\033]50;SetProfile=$NAME\a"
}

tab-reset() {
    NAME="Default"
    echo -e "\033]50;SetProfile=$NAME\a"
}

colorssh() {
    if [[ -n "$ITERM_SESSION_ID" ]]; then
        trap "tab-reset" INT EXIT
        if [[ "$*" =~ "kubeflow" ]]; then
            tabc kubeflow
        elif [[ "$*" =~ "devenv" ]]; then
            tabc devenv
        else
            tabc Other
        fi
    fi
    ssh $*
}

if [[ "$HOSTNAME" == "CMQ0TM6WH2" ]]; then
    tab-reset
    alias ssh="colorssh"
fi

# Use colordiff if available
if (( $+commands[colordiff] )); then
  alias diff='colordiff -u'
else
  alias diff='diff -u'
fi

# Add paths
path+=("${HOME}/.local/bin")
path+=("${HOME}/go/bin")
path+=("${KREW_ROOT:-$HOME/.krew}/bin")

# Load asdf
# . "$HOME/.asdf/asdf.sh"
# fpath=(${ASDF_DIR}/completions $fpath)
autoload -Uz compinit && compinit

# GitHub Copilot CLI
if (( $+commands[github-copilot-cli] )); then
  eval "$(github-copilot-cli alias -- "$0")"
fi

# AWS Profile selection
if [[ "$(uname)" == "Darwin" ]]; then
  alias awsp='export AWS_PROFILE=$(sed -nE "s/\[(profile )?([^]]+)\]/\2/p" ~/.aws/config | fzf)'
else
  alias awsp='export AWS_PROFILE=$(sed -n "s/\[\(profile \)\?\|\]//gp" ~/.aws/config | fzf)'
fi

# Load environment variables
[ -f ~/.env ] && export $(cat ~/.env | sed 's/#.*//g' | xargs)

# Load work-specific configurations
[ -f ~/.zshrc_work ] && source ~/.zshrc_work

# Initialize Starship prompt
eval "$(starship init zsh)"

# for zsh-completions
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh-completions:$FPATH

  autoload -Uz compinit
  compinit
fi
